# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.


############################################################
# Startup

# Configure Xresources settings.
exec xrdb ~/.config/Xresources

# Start up ibus IME daemon.
exec ibus-daemon --xim

# Start up Dunst notification system
exec dunst

# Set the window title font.
font pango:IPAGothic 14, DejaVu Sans Mono 12


############################################################
# Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim.
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator.
set $term rxvt

# Your preferred application launcher.
# Note: it's recommended that you pass the final command to sway.
set $menu dmenu_path | dmenu -fn "DejaVu Sans Mono-16" | xargs swaymsg exec --

# Set lock screen handler.
set $lock_screen swaylock -c 000000


############################################################
# Idle configuration

# Lock screen after 300 seconds of inactivity, then turn off displays after
# another 300 seconds, and turn screens back on when resumed. Also lock screen
# before the computer goes to sleep.
exec swayidle -w \
         timeout 300 '$lock_screen' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep '$lock_screen'


############################################################
# Output configuration
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Default wallpaper (more resolutions in /usr/share/backgrounds/sway/).
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill


############################################################
# Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs.
# Read `man 5 sway-input` for more information about this section.

input * {
    # Use Japanese keyboard layout with caps-lock as control.
    xkb_layout jp
    xkb_options ctrl:nocaps

    # Use natural mouse-wheel scrolling.
    natural_scroll enabled
}


############################################################
# Key bindings: Basics

# Start a terminal.
bindsym $mod+Return exec $term

# Kill focused window.
bindsym $mod+Shift+q kill

# Start the launcher.
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file.
bindsym $mod+Shift+c reload

# Lock the screen.
bindsym Control+$mod+l exec $lock_screen

# Exit sway (logs you out of your Wayland session).
bindsym $mod+Shift+e exec ~/.config/sway/exit_check.sh


############################################################
# Key bindings: Volume/Brightness

# PulseAudio:
# set $volume_up pactl set-sink-volume @DEFAULT_SINK@ +5%
# set $volume_down pactl set-sink-volume @DEFAULT_SINK@ -5%
# set $volume_toggle_mute pactl set-sink-mute @DEFAULT_SINK@ toggle
# set $volume_toggle_mic_mute pactl set-source-mute @DEFAULT_SOURCE@ toggle
#
# Alsa:
set $volume_up amixer -q sset Master 5%+
set $volume_down amixer -q sset Master 5%-
set $volume_toggle_mute amixer -q sset Master toggle
set $volume_toggle_mic_mute amixer -q sset Mic toggle

# Increase and decrease volume.
bindsym Control+$mod+F12 exec $volume_up
bindsym Control+$mod+F11 exec $volume_down
bindsym XF86AudioRaiseVolume exec $volume_up
bindsym XF86AudioLowerVolume exec $volume_down

# Handle media keys.
bindsym XF86AudioMute exec $volume_toggle_mute
bindsym XF86AudioMicMute exec $volume_toggle_mic_mute
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


############################################################
# Key bindings: Moving around

# Move your focus around.
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right].
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right


############################################################
# Key bindings: Workspaces

# Switch to workspace.
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10


############################################################
# Key bindings: Layout

# You can "split" the current object of your focus with $mod+b or $mod+v, for
# horizontal and vertical splits respectively.
bindsym $mod+b splith
bindsym $mod+v splitv
# Ditto, but with $mod-; and $mod-Shift-;.
bindsym $mod+Shift+semicolon splith
bindsym $mod+semicolon splitv

# Switch the current container between different layout styles.
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen.
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode.
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area.
bindsym $mod+space focus mode_toggle

# Move focus to the parent container.
bindsym $mod+a focus parent


############################################################
# Key bindings: Scratchpad
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad.
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


############################################################
# Key bindings: Resizing containers

mode "resize" {
    # Shrink or grow the container's width, height.
    bindsym $left resize shrink width 10px
    bindsym $down resize shrink height 10px
    bindsym $up resize grow height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys.
    bindsym Left resize shrink width 10px
    bindsym Down resize shrink height 10px
    bindsym Up resize grow height 10px
    bindsym Right resize grow width 10px

    # Return to default mode on Return or Esc.
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


############################################################
# Status Bar
#
# Read `man 5 sway-bar` for more information about this section.

bar {
    position top
    pango_markup disabled
    font pango:IPAGothic 16, DejaVu Sans Mono 14

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while ~/.config/sway/custom_statusbar; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
